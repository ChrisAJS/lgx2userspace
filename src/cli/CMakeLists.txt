cmake_minimum_required(VERSION 3.18)

set(CMAKE_CXX_STANDARD 14)

set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(SOURCES OptionParser.cpp OptionParser.h)

IF (USE_SFML MATCHES ON)
    set(SOURCES ${SOURCES} sfmlmain.cpp)
ELSE()
    set(SOURCES ${SOURCES} sdlmain.cpp)
ENDIF()

IF (CMAKE_SYSTEM MATCHES Windows)
    message("Building Windows executable")
    add_executable(lgx2userspace WIN32 ${SOURCES} appicon.rc)
    target_link_libraries(lgx2userspace PRIVATE mingw32 liblgx)
elseif(CMAKE_SYSTEM MATCHES Linux)
    add_executable(lgx2userspace ${SOURCES})
    target_include_directories(lgx2userspace PRIVATE liblgx)
    target_link_libraries(lgx2userspace PRIVATE liblgx)
elseif(CMAKE_SYSTEM MATCHES Darwin)
    add_executable(lgx2userspace ${SOURCES})
    SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -ObjC")
    target_include_directories(lgx2userspace PRIVATE liblgx)
    target_link_libraries(lgx2userspace PRIVATE liblgx)
endif()